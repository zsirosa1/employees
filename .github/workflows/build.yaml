name: Build and Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "maven"
      - name: Set version
        id: set_version
        run: |
          VERSION="1.0.0-${GITHUB_RUN_NUMBER}"
          echo "VERSION: ${VERSION}"
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Build with Maven
        run: ./mvnw -B package -Drevision=$VERSION
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: employees.jar
          path: target/employees-*.jar

  integration-test:
    if: false
    runs-on: ubuntu-latest
    needs: build
    env:
      SPRING_DATASOURCE_URL: jdbc:mariadb://localhost:3306/employees
      SPRING_DATASOURCE_USERNAME: employees
      SPRING_DATASOURCE_PASSWORD: employees
    services:
      mariadb:
        image: mariadb:12.1.1-rc
        env:
          MARIADB_DATABASE: employees
          MARIADB_USER: employees
          MARIADB_PASSWORD: employees
          MARIADB_ROOT_PASSWORD: employees
        ports:
          - 3306:3306
        options: >-
          --health-cmd="healthcheck.sh --connect --innodb_initialized"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - run: echo "Run integration-tests"
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "maven"
      - name: Build with Maven
        run: ./mvnw -B verify

  build-image:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: employees.jar
          path: target/
      - name: Read version from build job
        run: |
          echo "VERSION=${{ needs.build.outputs.version }}" >> $GITHUB_ENV
          echo "VERSION: $VERSION"
      - name: Login to github container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.layers
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ env.VERSION }}, ghcr.io/${{ github.repository }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - run: echo "Deploy application"
